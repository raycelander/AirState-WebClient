// @hash v2-C96BA51C411C8744BD35115C6F12C8A4
// Automatically generated by ReactJS.NET. Do not edit, your changes will be overridden.
// Version: 1.5.4 (build 4f3b0f1)
// Generated at: 21.08.2015 12:24:18
///////////////////////////////////////////////////////////////////////////////
  var isValidPullDown = false;
  var pullDownStartPos = 0;
  var AirState = React.createClass({displayName: "AirState",
      componentWillMount: function () {
          this.setState({ currentTempPre: 0,
            stations: []
          });
            
          var app = this;
          var p = new Measurements().getPoms().then(function(result){
            var poms = [];
            Object.keys(result).map(function(k){
              poms.push(React.createElement(PointOfMeasureComponent, {station: k}));
            });
            app.setState({ 
              stations: poms,
            });
          });  
      },
      render: function(){
      return (
        React.createElement("div", {className: "airstate container", onTouchEnd: this.onTouchEnd, onTouchStart: this.handleTouchStart, onTouchMove: this.handleTouchMove}, 
          React.createElement("div", {className: "row pulldown", ref: "pulldown"}), 
          React.createElement("div", {className: "row"}, 
            React.createElement("div", {className: "col-md-1 header"}, 
                  React.createElement("img", {src: "svg/airstate_full.svg", height: "86"})
             )
          ), 
          React.createElement("div", {className: "row"}, 
             this.state.stations
          ), 
          React.createElement("div", {className: "row"}, 	
            React.createElement("div", {className: "col-md-12"}, 
              React.createElement(HighchartsBar, {measurement: "temp"})
            )
          ), 
          React.createElement("div", {className: "row"}, 
            React.createElement("div", {className: "col-md-12"}, 
              React.createElement(HighchartsBar, {measurement: "hum"})
            )
          ), 
           React.createElement("div", {className: "row"}, 
            React.createElement("div", {className: "col-md-12"}, 
              React.createElement(HighchartsBar, {measurement: "hpa"})
            )
          )
        )
      );
    },
    handleTouchStart: function(event) {
        isValidPullDown = window.scrollY == 0;
        pullDownStartPos = event.touches[0].clientY;
    },
    handleTouchMove: function(event) {
      if (isValidPullDown){
        this.refs.pulldown.getDOMNode().style.height = event.touches[0].clientY - pullDownStartPos + "px";
        if (event.touches[0].clientY - pullDownStartPos > 40){
          this.refs.pulldown.getDOMNode().innerText = "release to refresh";
        }else{
          this.refs.pulldown.getDOMNode().innerText = "";
        }
      }
    },
    onTouchEnd: function(event) {
      this.refs.pulldown.getDOMNode().innerText = "";
      if (event.changedTouches[0].clientY - pullDownStartPos < 40){
        this.refs.pulldown.getDOMNode().style.height = "0px";
        isValidPullDown = false;
        return;
      }
      
      if (isValidPullDown){
        this.refs.pulldown.getDOMNode().style.height = "0px";
        React.render(React.createElement(AirState, null), document.getElementById('airstate'));
      }
    },
  });
React.initializeTouchEvents(true);
React.render(React.createElement(AirState, null), document.getElementById('airstate'));
